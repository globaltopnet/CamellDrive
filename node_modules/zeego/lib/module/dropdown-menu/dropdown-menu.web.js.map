{"version":3,"sources":["dropdown-menu.web.tsx"],"names":["React","cloneElement","ItemPrimitive","MenuDisplayName","create","View","forwardRef","DropdownMenu","Root","children","onOpenChange","displayName","TriggerView","props","ref","asChild","rest","onClickCapture","onPointerDown","Trigger","style","ContentView","Content","loop","side","align","alignOffset","avoidCollisions","collisionPadding","sideOffset","itemStyleReset","outlineWidth","Item","disabled","onSelect","onBlur","onFocus","textValue","shouldDismissMenuOnSelect","e","preventDefault","undefined","SubTrigger","Group","Separator","CheckboxItem","onValueChange","value","current","next","ItemIndicator","ItemIcon","Arrow","restProps","Sub","SubContent","ItemImage","Label","ItemTitle","ItemSubtitle"],"mappings":"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","sourcesContent":["import React, { cloneElement } from 'react'\nimport {\n  ItemPrimitive,\n  MenuContentProps,\n  MenuGroupProps,\n  MenuItemProps,\n  MenuRootProps,\n  MenuSeparatorProps,\n  MenuSubTriggerProps,\n  MenuTriggerProps,\n  MenuDisplayName,\n  MenuCheckboxItemProps,\n  MenuItemIndicatorProps,\n  MenuItemIconProps,\n  create,\n  MenuArrowProps,\n  MenuSubProps,\n  MenuSubContentProps,\n} from '../menu'\nimport { View } from 'react-native'\nimport { forwardRef } from 'react'\n\nimport * as DropdownMenu from '@radix-ui/react-dropdown-menu'\n\nconst Root = ({ children, onOpenChange }: MenuRootProps) => {\n  return (\n    <DropdownMenu.Root onOpenChange={onOpenChange}>\n      {children}\n    </DropdownMenu.Root>\n  )\n}\nRoot.displayName = MenuDisplayName.Root\n\nconst TriggerView = forwardRef<unknown, any>((props, ref) => {\n  if (props.asChild) {\n    const { children, ...rest } = props\n    return cloneElement(children, {\n      ref,\n      ...rest,\n      onClickCapture: props.onPointerDown,\n    })\n  }\n  return (\n    <View ref={ref} {...props} onClickCapture={props.onPointerDown}>\n      {props.children}\n    </View>\n  )\n})\n\nconst Trigger = ({ children, style, asChild }: MenuTriggerProps) => {\n  return (\n    <DropdownMenu.Trigger asChild>\n      <TriggerView style={style} asChild={asChild}>\n        {children}\n      </TriggerView>\n    </DropdownMenu.Trigger>\n  )\n}\nTrigger.displayName = MenuDisplayName.Trigger\n\nconst ContentView = forwardRef<unknown, any>((props, ref) => {\n  return (\n    <View ref={ref} {...props} onClickCapture={props.onPointerDown}>\n      {props.children}\n    </View>\n  )\n})\n\nconst Content = ({\n  children,\n  style,\n  loop,\n  side,\n  align,\n  alignOffset,\n  avoidCollisions,\n  collisionPadding,\n  sideOffset,\n}: MenuContentProps) => {\n  return (\n    <DropdownMenu.Portal>\n      <DropdownMenu.Content\n        loop={loop}\n        side={side}\n        align={align}\n        alignOffset={alignOffset}\n        avoidCollisions={avoidCollisions}\n        collisionPadding={collisionPadding}\n        sideOffset={sideOffset}\n      >\n        <ContentView style={style}>{children}</ContentView>\n      </DropdownMenu.Content>\n    </DropdownMenu.Portal>\n  )\n}\nContent.displayName = MenuDisplayName.Content\n\nconst itemStyleReset = {\n  outlineWidth: 0,\n}\n\nconst Item = ({\n  children,\n  disabled,\n  onSelect,\n  style,\n  onBlur,\n  onFocus,\n  textValue,\n  shouldDismissMenuOnSelect,\n}: MenuItemProps) => {\n  return (\n    <DropdownMenu.Item\n      onFocus={onFocus}\n      textValue={textValue}\n      onBlur={onBlur}\n      disabled={disabled}\n      onSelect={(e) => {\n        onSelect?.()\n        if (shouldDismissMenuOnSelect === false) {\n          e.preventDefault()\n        }\n      }}\n      style={itemStyleReset}\n    >\n      <ItemPrimitive\n        // @ts-expect-error we require a key in the types\n        // this is for consumers\n        // however, it isn't relevant locally here, since the key will be passed to the parent component\n        // so that is sufficient\n        key={undefined}\n        style={style}\n      >\n        {children}\n      </ItemPrimitive>\n    </DropdownMenu.Item>\n  )\n}\nItem.displayName = MenuDisplayName.Item\n\nconst SubTrigger = ({\n  children,\n  style,\n  textValue,\n  disabled,\n  onBlur,\n  onFocus,\n}: MenuSubTriggerProps) => {\n  return (\n    <DropdownMenu.SubTrigger\n      disabled={disabled}\n      textValue={textValue}\n      onBlur={onBlur}\n      onFocus={onFocus}\n      style={itemStyleReset}\n    >\n      <ItemPrimitive\n        // @ts-expect-error we require a key in the types\n        // this is for consumers\n        // however, it isn't relevant locally here, since the key will be passed to the parent component\n        // so that is sufficient\n        key={undefined}\n        style={style}\n      >\n        {children}\n      </ItemPrimitive>\n    </DropdownMenu.SubTrigger>\n  )\n}\nSubTrigger.displayName = MenuDisplayName.SubTrigger\n\nconst Group = ({ children }: MenuGroupProps) => {\n  return <DropdownMenu.Group>{children}</DropdownMenu.Group>\n}\nGroup.displayName = MenuDisplayName.Group\n\nconst Separator = ({ style }: MenuSeparatorProps) => {\n  return (\n    <DropdownMenu.Separator>\n      <View style={style} />\n    </DropdownMenu.Separator>\n  )\n}\nSeparator.displayName = MenuDisplayName.Separator\n\nconst CheckboxItem = ({\n  onValueChange,\n  value,\n  disabled,\n  textValue,\n  onBlur,\n  onFocus,\n  style,\n  children,\n  shouldDismissMenuOnSelect,\n}: MenuCheckboxItemProps) => {\n  return (\n    <DropdownMenu.CheckboxItem\n      onFocus={onFocus}\n      textValue={textValue}\n      onBlur={onBlur}\n      disabled={disabled}\n      checked={typeof value === 'boolean' ? value : value !== 'off'}\n      onSelect={(e) => {\n        const current = value === true ? 'on' : value === false ? 'off' : value\n        const next = current === 'on' ? 'off' : 'on'\n\n        onValueChange?.(next, current)\n\n        if (shouldDismissMenuOnSelect === false) {\n          e.preventDefault()\n        }\n      }}\n      style={itemStyleReset}\n    >\n      <ItemPrimitive\n        // @ts-expect-error we require a key in the types\n        // this is for consumers\n        // however, it isn't relevant locally here, since the key will be passed to the parent component\n        // so that is sufficient\n        key={undefined}\n        style={style}\n      >\n        {children}\n      </ItemPrimitive>\n    </DropdownMenu.CheckboxItem>\n  )\n}\nCheckboxItem.displayName = MenuDisplayName.CheckboxItem\n\nconst ItemIndicator = ({ style, children }: MenuItemIndicatorProps) => (\n  <DropdownMenu.ItemIndicator>\n    <View style={style}>{children}</View>\n  </DropdownMenu.ItemIndicator>\n)\nItemIndicator.displayName = MenuDisplayName.ItemIndicator\n\nconst ItemIcon = ({ children, style }: MenuItemIconProps) => {\n  return <View style={style}>{children}</View>\n}\n\nItemIcon.displayName = MenuDisplayName.ItemIcon\n\nconst Arrow = create(({ children, ...restProps }: MenuArrowProps) => {\n  return <DropdownMenu.Arrow {...restProps}>{children}</DropdownMenu.Arrow>\n}, 'Arrow')\n\nconst Sub = create<MenuSubProps>(({ children }) => {\n  return <DropdownMenu.Sub>{children}</DropdownMenu.Sub>\n}, 'Sub')\n\nconst SubContent = create(\n  ({\n    children,\n    alignOffset,\n    avoidCollisions,\n    collisionPadding,\n    loop,\n    sideOffset,\n    style,\n  }: MenuSubContentProps) => (\n    <DropdownMenu.Portal>\n      <DropdownMenu.SubContent\n        loop={loop}\n        alignOffset={alignOffset}\n        avoidCollisions={avoidCollisions}\n        collisionPadding={collisionPadding}\n        sideOffset={sideOffset}\n      >\n        <ContentView style={style}>{children}</ContentView>\n      </DropdownMenu.SubContent>\n    </DropdownMenu.Portal>\n  ),\n  'SubContent'\n)\n\nexport {\n  Root,\n  Trigger,\n  Content,\n  Item,\n  SubTrigger,\n  Group,\n  Separator,\n  CheckboxItem,\n  ItemIndicator,\n  ItemIcon,\n  Arrow,\n  Sub,\n  SubContent,\n}\n\nexport { ItemImage } from '../menu/web-primitives/item-image'\nexport { Label } from './web/label'\n\nexport { ItemTitle, ItemSubtitle } from '../menu'\n"]}