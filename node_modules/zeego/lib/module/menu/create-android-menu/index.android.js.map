{"version":3,"sources":["index.android.tsx"],"names":["React","Children","cloneElement","MenuView","flattenChildren","pickChildren","isInstanceOfComponent","create","filterNull","View","createAndroidMenu","Menu","Trigger","children","style","asChild","Auxiliary","Group","Content","console","error","ItemTitle","Error","ItemIcon","props","androidIconName","warn","ItemImage","ItemSubtitle","Item","titleChild","targetChildren","length","SubTrigger","Sub","_","SubContent","CheckboxItem","Label","Root","trigger","content","callbacks","getItemFromChild","child","index","title","key","subtitle","menuAttributes","disabled","destructive","hidden","icon","maybeTitle","textValue","subtitleChild","iconChildren","imageChild","maybeIndexKey","startsWith","substring","undefined","isNaN","Number","toLowerCase","replace","onSelect","menuState","value","currentState","nextState","onValueChange","mapItemsChildren","map","item","flat","_child","finalItem","id","image","attributes","hasItemIndicator","ItemIndicator","state","triggerItemChild","triggerItem","nestedContent","nestedItems","filter","menuConfig","subactions","menuItems","label","menuTitle","shouldOpenOnLongPress","action","nativeEvent","event","Separator","Preview","Arrow"],"mappings":"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","sourcesContent":["import React, { Children, ReactElement, cloneElement } from 'react'\n\nimport { MenuView } from '@react-native-menu/menu'\n\nimport {\n  flattenChildren,\n  pickChildren,\n  isInstanceOfComponent,\n} from '../children'\nimport { create } from '../display-names'\nimport { filterNull } from '../filter-null'\nimport type {\n  MenuContentProps,\n  MenuGroupProps,\n  MenuItemProps,\n  MenuItemSubtitleProps,\n  MenuItemTitleProps,\n  MenuRootProps,\n  MenuSubTriggerProps,\n  MenuTriggerProps,\n  MenuItemIconProps,\n  MenuCheckboxItemProps,\n  MenuSeparatorProps,\n  MenuItemImageProps,\n  MenuItemIndicatorProps,\n  MenuLabelProps,\n  ContextMenuPreviewProps,\n  ContextMenuContentProps,\n  MenuArrowProps,\n  MenuSubProps,\n  MenuSubContentProps,\n  ContextMenuAuxliliaryProps,\n} from '../types'\nimport { View } from 'react-native'\n\nconst createAndroidMenu = (Menu: 'ContextMenu' | 'DropdownMenu') => {\n  const Trigger = create(({ children, style, asChild }: MenuTriggerProps) => {\n    if (asChild) {\n      return cloneElement(children, {\n        style,\n      })\n    }\n    return <View style={style}>{children}</View>\n  }, 'Trigger')\n\n  const Auxiliary = create(\n    ({}: ContextMenuAuxliliaryProps) => null,\n    'Auxiliary'\n  )\n\n  const Group = create(({ children }: MenuGroupProps) => {\n    return <>{children}</>\n  }, 'Group')\n\n  const Content = create(\n    ({ children }: MenuContentProps | ContextMenuContentProps) => {\n      if (!children) {\n        console.error(`[zeego] <Content /> children must be written directly inline.\n\nYou cannot wrap this component into its own component. It should look like this:\n\n<Root>\n  <Content>\n    <Item />\n    <Item />\n  </Content>\n</Root>\n\nNotice that the <Item /> are all children of the <Content /> component. That's important.\n\nIf you want to use a custom component as your <Content />, you can use the create() method. But you still need to pass all items as children of <Content />.`)\n      }\n      return <>{children}</>\n    },\n    'Content'\n  )\n\n  const ItemTitle = create(({ children }: MenuItemTitleProps) => {\n    if (typeof children != 'string') {\n      throw new Error('[zeego] <ItemTitle /> child must be a string')\n    }\n    return <>{children}</>\n  }, 'ItemTitle')\n\n  const ItemIcon = create((props: MenuItemIconProps) => {\n    if (!props.androidIconName) {\n      console.warn(\n        '[zeego] <ItemIcon /> missing androidIconName prop. Will do nothing on android. Consider passing an androidIconName or switching to <ItemImage />.'\n      )\n    }\n    return <>{}</>\n  }, 'ItemIcon')\n\n  const ItemImage = create((props: MenuItemImageProps) => {\n    // if (!props.source) {\n    //   console.error('[zeego] <ItemImage /> missing source prop.')\n    // }\n    if (!props.androidIconName) {\n      console.warn(\n        '[zeego] <ItemImage /> will not use your custom image on android. You should use the androidIconName prop to render an icon on android too.'\n      )\n    }\n    return <>{}</>\n  }, 'ItemImage')\n\n  const ItemSubtitle = create(({ children }: MenuItemSubtitleProps) => {\n    if (children && typeof children != 'string') {\n      throw new Error('[zeego] <ItemSubtitle /> child must be a string')\n    }\n    return <>{children}</>\n  }, 'ItemSubtitle')\n\n  const Item = create(({ children }: MenuItemProps) => {\n    const titleChild = pickChildren(children, ItemTitle).targetChildren\n    if (typeof children != 'string' && !titleChild?.length) {\n      console.error(\n        `[zeego] Invalid <Item />. It either needs <ItemTitle /> in the children.\n\n<Item>\n  <ItemTitle>\n    Title here\n  </ItemTitle>\n</Item>\n  `\n      )\n    }\n    return <>{children}</>\n  }, 'Item')\n\n  const SubTrigger = create(({ children }: MenuSubTriggerProps) => {\n    const titleChild = pickChildren(children, ItemTitle).targetChildren\n    if (typeof children != 'string' && !titleChild?.length) {\n      console.error(\n        `[zeego] Invalid <SubTrigger />. It either needs an <ItemTitle /> in the children.\n\n<SubTrigger>\n  <ItemTitle>\n    Title here\n  </ItemTitle>\n</SubTrigger>\n  `\n      )\n    }\n    return <>{children}</>\n  }, 'SubTrigger')\n  const Sub = create((_: MenuSubProps) => <></>, 'Sub')\n  const SubContent = create((_: MenuSubContentProps) => <></>, 'SubContent')\n\n  const CheckboxItem = create(({}: MenuCheckboxItemProps) => {\n    return <></>\n  }, 'CheckboxItem')\n\n  const Label = create(({ children }: MenuLabelProps) => {\n    if (typeof children != 'string') {\n      console.error('[zeego] <Label /> children must be a string.')\n    }\n    return <></>\n  }, 'Label')\n\n  type MenuAttributes = {\n    disabled?: boolean\n    destructive?: boolean\n    hidden?: boolean\n  }\n\n  type MenuConfig = {\n    id?: string\n    title: string\n    subactions: (MenuItem | MenuConfig)[]\n    attributes?: MenuAttributes\n    image?: MenuItemIcon\n  }\n\n  type MenuItemIcon = string\n\n  type MenuItem = {\n    id: string\n    title: string\n    titleColor?: string\n    subtitle?: string\n    image?: string\n    imageColor?: string\n    state?: 'on' | 'off' | 'mixed'\n    attributes?: MenuAttributes\n  }\n\n  const Root = create((props: MenuRootProps) => {\n    const trigger = pickChildren<MenuTriggerProps>(props.children, Trigger)\n    const content = pickChildren<MenuContentProps | ContextMenuContentProps>(\n      props.children,\n      Content\n    ).targetChildren?.[0]\n\n    const callbacks: Record<string, () => void> = {}\n\n    const getItemFromChild = (\n      child: ReactElement<\n        MenuItemProps | MenuSubTriggerProps | MenuCheckboxItemProps\n      >,\n      index: number\n    ) => {\n      let title: string | undefined\n      const key: string = child.key ? `${child.key}` : `item-${index}`\n      let subtitle: string | undefined\n      const menuAttributes: MenuAttributes = {}\n\n      if (child.props.disabled) {\n        menuAttributes.disabled = true\n      }\n      if (child.props.destructive) {\n        menuAttributes.destructive = true\n      }\n      if (child.props.hidden) {\n        menuAttributes.hidden = true\n      }\n\n      let icon: MenuItem['image']\n\n      if (typeof child.props.children == 'string') {\n        title = child.props.children\n      } else {\n        const titleChild = pickChildren<MenuItemTitleProps>(\n          child.props.children,\n          ItemTitle\n        ).targetChildren\n\n        const maybeTitle =\n          child.props.textValue ?? titleChild?.[0]?.props.children\n\n        if (typeof maybeTitle == 'string') {\n          title = maybeTitle\n        } else {\n          console.error(\n            `[zeego] Invalid <${Menu}.Item key=\"${key}\" /> Missing valid title. Make sure you do one of the following:\n  \n  1. pass a string as the child of <${Menu}.ItemTitle />, nested directly inside of <${Menu}.Item />.\n  2. OR, use the textValue prop on <${Menu}.Item textValue=\"Some value\" />`\n          )\n        }\n\n        const subtitleChild = pickChildren<MenuItemSubtitleProps>(\n          child.props.children,\n          ItemSubtitle\n        ).targetChildren\n        if (typeof subtitleChild?.[0]?.props.children == 'string') {\n          subtitle = subtitleChild[0].props.children\n        }\n\n        const iconChildren = pickChildren<MenuItemIconProps>(\n          child.props.children,\n          ItemIcon\n        ).targetChildren\n\n        if (iconChildren?.[0]?.props.androidIconName) {\n          icon = iconChildren[0].props.androidIconName\n        } else {\n          const imageChild = pickChildren<MenuItemImageProps>(\n            child.props.children,\n            ItemImage\n          ).targetChildren?.[0]\n\n          if (imageChild) {\n            const { androidIconName } = imageChild.props\n            if (androidIconName) {\n              icon = androidIconName\n            } else {\n              // require('react-native/Libraries/Network/RCTNetworking')\n              // const { Image } =\n              //   require('react-native') as typeof import('react-native')\n              // const iconValue = Image.resolveAssetSource(source)\n              // icon = {\n              //   iconType: 'REQUIRE',\n              //   iconValue,\n              // }\n            }\n          }\n        }\n      }\n      if (title) {\n        const maybeIndexKey =\n          typeof child.key == 'string' && child.key.startsWith('.')\n            ? child.key.substring(1)\n            : undefined\n\n        if (\n          // if the key doesn't exist as a string\n          typeof child.key != 'string' ||\n          // or if flattenChildren assigned the key as `.${key}${index}`\n          (child.key.startsWith('.') && !isNaN(Number(maybeIndexKey)))\n        ) {\n          console.warn(\n            `[zeego] <Item /> is missing a unique key. Pass a unique key string for each item, such as: <Item key=\"${\n              title.toLowerCase().replace(/ /g, '-') || `action-${index}`\n            }\" />. Falling back to index (${key}) instead, but this may have negative consequences.`\n          )\n        }\n        if ('onSelect' in child.props && child.props.onSelect) {\n          callbacks[key] = child.props.onSelect\n        } else if ('onValueChange' in child.props) {\n          const menuState = child.props.value\n          const currentState =\n            menuState === true ? 'on' : menuState === false ? 'off' : menuState\n          const nextState =\n            currentState === 'mixed' || currentState === 'on' ? 'off' : 'on'\n          const { onValueChange } = child.props\n          callbacks[key] = () => {\n            onValueChange?.(nextState, currentState)\n          }\n        }\n\n        return {\n          key,\n          title,\n          subtitle,\n          menuAttributes,\n          icon,\n        }\n      }\n      return\n    }\n\n    const mapItemsChildren = (\n      children: React.ReactNode\n    ): ((MenuItem | MenuConfig) | null)[] => {\n      return Children.map(\n        flattenChildren(children)\n          .map((item) => {\n            // android menu doesn't support group feature like iOS `displayInline` option in menu\n            if (\n              isInstanceOfComponent(item, Group) &&\n              typeof item === 'object'\n            ) {\n              return flattenChildren(item.props.children)\n            }\n            return item\n          })\n          .flat(),\n        (_child, index) => {\n          if (isInstanceOfComponent(_child, Item)) {\n            const child = _child as ReactElement<MenuItemProps>\n\n            const item = getItemFromChild(child, index)\n            if (item) {\n              const { icon, title, key, menuAttributes, subtitle } = item\n              const finalItem: MenuItem = {\n                id: key,\n                title,\n                image: icon,\n                attributes: menuAttributes,\n                subtitle,\n              }\n              return finalItem\n            }\n          } else if (isInstanceOfComponent(_child, CheckboxItem)) {\n            const child = _child as ReactElement<MenuCheckboxItemProps>\n\n            const item = getItemFromChild(child, index)\n            if (item) {\n              const { icon, title, key, menuAttributes, subtitle } = item\n              const menuState = child.props.value\n              const currentState =\n                menuState === true\n                  ? 'on'\n                  : menuState === false\n                  ? 'off'\n                  : menuState\n\n              const hasItemIndicator =\n                pickChildren(child.props.children, ItemIndicator)\n                  .targetChildren?.[0] !== undefined\n\n              let image = icon\n\n              if (hasItemIndicator && !icon) {\n                image =\n                  currentState === 'on'\n                    ? 'checkbox_on_background'\n                    : 'checkbox_off_background'\n              }\n\n              const finalItem: MenuItem = {\n                id: key,\n                title,\n                image,\n                attributes: menuAttributes,\n                subtitle,\n                state: currentState,\n              }\n              return finalItem\n            }\n          } else if (isInstanceOfComponent(_child, Sub)) {\n            const child = _child as ReactElement<MenuRootProps>\n            const key: string = child.key ? `${child.key}` : `sub-${index}`\n            const triggerItemChild = pickChildren<MenuSubTriggerProps>(\n              child.props.children,\n              SubTrigger\n            ).targetChildren?.[0]\n\n            const triggerItem =\n              triggerItemChild && getItemFromChild(triggerItemChild, index)\n            if (triggerItem) {\n              const nestedContent = pickChildren<MenuContentProps>(\n                child.props.children,\n                SubContent\n              ).targetChildren?.[0]\n\n              if (nestedContent) {\n                const nestedItems = mapItemsChildren(\n                  nestedContent.props.children\n                ).filter(filterNull)\n\n                if (nestedItems.length) {\n                  const menuConfig: MenuConfig = {\n                    id: key,\n                    title: triggerItem?.title,\n                    image: triggerItem?.icon,\n                    subactions: nestedItems,\n                    attributes: triggerItem.menuAttributes,\n                  }\n                  return menuConfig\n                }\n              }\n            }\n          }\n          return null\n        }\n      )\n    }\n\n    const menuItems = mapItemsChildren(content?.props.children).filter(\n      filterNull\n    )\n\n    const label = pickChildren<MenuLabelProps>(content?.props.children, Label)\n      .targetChildren?.[0]?.props.children\n    let menuTitle = ''\n    if (typeof label == 'string') {\n      menuTitle = label\n    }\n\n    const triggerItem = trigger.targetChildren?.[0]\n\n    let shouldOpenOnLongPress = Menu === 'ContextMenu'\n\n    if (triggerItem?.props.action) {\n      shouldOpenOnLongPress = triggerItem.props.action === 'longPress'\n    }\n\n    return (\n      <MenuView\n        title={menuTitle}\n        onPressAction={({ nativeEvent }) => {\n          callbacks[nativeEvent.event]?.()\n        }}\n        shouldOpenOnLongPress={shouldOpenOnLongPress}\n        actions={menuItems}\n      >\n        {triggerItem}\n      </MenuView>\n    )\n  }, 'Root')\n\n  const Separator = create((_: MenuSeparatorProps) => {\n    return <></>\n  }, 'Separator')\n\n  const ItemIndicator = create(\n    (_: MenuItemIndicatorProps) => <></>,\n    'ItemIndicator'\n  )\n\n  const Preview = create((_: ContextMenuPreviewProps) => <></>, 'Preview')\n\n  const Arrow = create((_: MenuArrowProps) => <></>, 'Arrow')\n\n  return {\n    Root,\n    Trigger,\n    Content,\n    Item,\n    ItemTitle,\n    ItemSubtitle,\n    SubTrigger,\n    Group,\n    Separator,\n    ItemIcon,\n    ItemIndicator,\n    CheckboxItem,\n    ItemImage,\n    Label,\n    Preview,\n    Arrow,\n    Sub,\n    SubContent,\n    Auxiliary,\n  }\n}\n\nexport { createAndroidMenu }\n"]}