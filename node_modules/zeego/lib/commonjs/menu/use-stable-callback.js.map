{"version":3,"sources":["use-stable-callback.ts"],"names":["useStableCallback","callback","callbackRef","current","args"],"mappings":";;;;;;;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,iBAAT,CACEC,QADF,EAEK;AACH,QAAMC,WAAW,GAAG,mBAAOD,QAAP,CAApB;AAEA,wBAAU,MAAM;AACdC,IAAAA,WAAW,CAACC,OAAZ,GAAsBF,QAAtB;AACD,GAFD,EAHG,CAOH;;AACA,SAAO,oBAAQ,MAAO;AAAA;;AAAA,sCAAIG,IAAJ;AAAIA,MAAAA,IAAJ;AAAA;;AAAA,mCAAaF,WAAW,CAACC,OAAzB,yDAAa,0BAAAD,WAAW,EAAW,GAAGE,IAAd,CAAxB;AAAA,GAAf,EAAkE,EAAlE,CAAP;AACD","sourcesContent":["import { useRef, useMemo, useEffect } from 'react'\n\n/**\n * https://github.com/radix-ui/primitives/blob/main/packages/react/use-callback-ref/src/useCallbackRef.tsx\n *\n * A custom hook that converts a callback to a ref to avoid triggering re-renders when passed as a\n * prop or avoid re-executing effects when passed as a dependency\n */\nfunction useStableCallback<T extends (...args: any[]) => any>(\n  callback: T | undefined\n): T {\n  const callbackRef = useRef(callback)\n\n  useEffect(() => {\n    callbackRef.current = callback\n  })\n\n  // https://github.com/facebook/react/issues/19240\n  return useMemo(() => ((...args) => callbackRef.current?.(...args)) as T, [])\n}\n\nexport { useStableCallback }\n"]}