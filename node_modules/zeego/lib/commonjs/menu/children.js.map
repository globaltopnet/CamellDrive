{"version":3,"sources":["children.ts"],"names":["flattenChildrenKeyless","children","childrenArray","React","Children","toArray","reduce","flatChildren","child","type","Fragment","concat","flattenChildren","props","push","depth","keys","acc","node","nodeIndex","apply","key","String","join","pickChildren","_children","targetChild","target","withoutTargetChildren","map","item","isInstanceOfComponent","targetChildren","length","undefined","element","targetElement","matches","displayName"],"mappings":"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","sourcesContent":["/**\n * Credit to geist-ui/react for this file, it's copied from there.\n */\n\nimport React, {\n  ReactNode,\n  Children,\n  ReactChild,\n  isValidElement,\n  cloneElement,\n  ReactElement,\n} from 'react'\n\ntype ReactChildArray = ReturnType<typeof React.Children.toArray>\n\nexport function flattenChildrenKeyless(\n  children: React.ReactNode\n): ReactChildArray {\n  const childrenArray = React.Children.toArray(children)\n  return childrenArray.reduce((flatChildren: ReactChildArray, child) => {\n    if ((child as React.ReactElement<any>).type === React.Fragment) {\n      return flatChildren.concat(\n        flattenChildren((child as React.ReactElement<any>).props.children)\n      )\n    }\n    flatChildren.push(child)\n    return flatChildren\n  }, [])\n}\n\nexport function flattenChildren(\n  children: ReactNode,\n  depth: number = 0,\n  keys: (string | number)[] = []\n): ReactChild[] {\n  return Children.toArray(children).reduce(\n    (acc: ReactChild[], node: any, nodeIndex) => {\n      if (node.type === React.Fragment) {\n        acc.push.apply(\n          acc,\n          flattenChildren(\n            node.props.children,\n            depth + 1,\n            keys.concat(node.key || nodeIndex)\n          )\n        )\n      } else {\n        if (isValidElement(node)) {\n          acc.push(\n            cloneElement(node, {\n              key: keys.concat(String(node.key)).join('.'),\n            })\n          )\n        } else if (typeof node === 'string' || typeof node === 'number') {\n          acc.push(node)\n        }\n      }\n      return acc\n    },\n    []\n  )\n}\n\nexport const pickChildren = <Props = any>(\n  _children: React.ReactNode | undefined,\n  targetChild: React.ElementType\n) => {\n  const children = flattenChildren(_children)\n  const target: ReactElement<Props>[] = []\n  const withoutTargetChildren = React.Children.map(children, (item) => {\n    if (!isValidElement(item)) return item\n    if (isInstanceOfComponent(item, targetChild)) {\n      // @ts-expect-error\n      target.push(cloneElement(item))\n      return null\n    }\n    return item\n  })\n\n  const targetChildren = target.length >= 0 ? target : undefined\n\n  return {\n    targetChildren,\n    withoutTargetChildren,\n  }\n}\n\nexport const isInstanceOfComponent = <Props>(\n  element: React.ReactElement | React.ReactText | undefined,\n  targetElement: React.ComponentType<Props> | React.ElementType<Props>\n): element is NonNullable<React.ReactElement<Props>> => {\n  const matches =\n    (element as any)?.type === targetElement ||\n    (typeof (element as any)?.type == 'function' &&\n      (element as any)?.type?.displayName ===\n        (targetElement as any).displayName)\n\n  return matches\n}\n"]}