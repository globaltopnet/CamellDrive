"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ItemIcon = exports.Item = exports.Group = exports.Content = exports.CheckboxItem = exports.Auxiliary = exports.Arrow = void 0;
Object.defineProperty(exports, "ItemImage", {
  enumerable: true,
  get: function () {
    return _itemImage.ItemImage;
  }
});
exports.ItemIndicator = void 0;
Object.defineProperty(exports, "ItemSubtitle", {
  enumerable: true,
  get: function () {
    return _menu.ItemSubtitle;
  }
});
Object.defineProperty(exports, "ItemTitle", {
  enumerable: true,
  get: function () {
    return _menu.ItemTitle;
  }
});
Object.defineProperty(exports, "Label", {
  enumerable: true,
  get: function () {
    return _label.Label;
  }
});
exports.Trigger = exports.SubTrigger = exports.SubContent = exports.Sub = exports.Separator = exports.Root = exports.Preview = void 0;

var ContextMenu = _interopRequireWildcard(require("@radix-ui/react-context-menu"));

var _react = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _menu = require("../menu");

var _itemImage = require("../menu/web-primitives/item-image");

var _label = require("./web/label");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

const Root = (0, _menu.create)(_ref => {
  let {
    children,
    onOpenChange
  } = _ref;
  return /*#__PURE__*/_react.default.createElement(ContextMenu.Root, {
    onOpenChange: onOpenChange
  }, children);
}, 'Root');
exports.Root = Root;
const TriggerView = /*#__PURE__*/(0, _react.forwardRef)((props, ref) => {
  if (props.asChild) {
    return /*#__PURE__*/(0, _react.cloneElement)(props.children, {
      ref,
      onClickCapture: props.onPointerDown
    });
  }

  return /*#__PURE__*/_react.default.createElement(_reactNative.View, _extends({
    ref: ref
  }, props, {
    onClickCapture: props.onPointerDown
  }), props.children);
});
const Trigger = (0, _menu.create)(_ref2 => {
  let {
    children,
    style,
    asChild
  } = _ref2;
  return /*#__PURE__*/_react.default.createElement(ContextMenu.Trigger, {
    asChild: true
  }, /*#__PURE__*/_react.default.createElement(TriggerView, {
    style: style,
    asChild: asChild
  }, children));
}, 'Trigger');
exports.Trigger = Trigger;
const ContentView = /*#__PURE__*/(0, _react.forwardRef)((props, ref) => {
  return /*#__PURE__*/_react.default.createElement(_reactNative.View, _extends({
    ref: ref
  }, props, {
    onClickCapture: props.onPointerDown
  }), props.children);
});
const Content = (0, _menu.create)(_ref3 => {
  let {
    children,
    style,
    loop,
    alignOffset,
    avoidCollisions,
    collisionPadding
  } = _ref3;
  return /*#__PURE__*/_react.default.createElement(ContextMenu.Portal, null, /*#__PURE__*/_react.default.createElement(ContextMenu.Content, {
    loop: loop,
    alignOffset: alignOffset,
    avoidCollisions: avoidCollisions,
    collisionPadding: collisionPadding
  }, /*#__PURE__*/_react.default.createElement(ContentView, {
    style: style
  }, children)));
}, 'Content');
exports.Content = Content;
const itemStyleReset = {
  outlineWidth: 0
};
const Item = (0, _menu.create)(_ref4 => {
  let {
    children,
    disabled,
    onSelect,
    style,
    onBlur,
    onFocus,
    textValue
  } = _ref4;
  return /*#__PURE__*/_react.default.createElement(ContextMenu.Item, {
    onFocus: onFocus,
    textValue: textValue,
    onBlur: onBlur,
    disabled: disabled,
    onSelect: onSelect,
    style: itemStyleReset
  }, /*#__PURE__*/_react.default.createElement(_menu.ItemPrimitive // @ts-expect-error we require a key in the types
  // this is for consumers
  // however, it isn't relevant locally here, since the key will be passed to the parent component
  // so that is sufficient
  , {
    key: undefined,
    style: style
  }, children));
}, 'Item');
exports.Item = Item;
const SubTrigger = (0, _menu.create)(_ref5 => {
  let {
    children,
    style,
    textValue,
    disabled,
    onBlur,
    onFocus
  } = _ref5;
  return /*#__PURE__*/_react.default.createElement(ContextMenu.SubTrigger, {
    disabled: disabled,
    textValue: textValue,
    onBlur: onBlur,
    onFocus: onFocus,
    style: itemStyleReset
  }, /*#__PURE__*/_react.default.createElement(_menu.ItemPrimitive // this is for consumers
  // however, it isn't relevant locally here, since the key will be passed to the parent component
  // so that is sufficient
  , {
    key: undefined,
    style: style
  }, children));
}, 'SubTrigger');
exports.SubTrigger = SubTrigger;
const Group = (0, _menu.create)(_ref6 => {
  let {
    children
  } = _ref6;
  return /*#__PURE__*/_react.default.createElement(ContextMenu.Group, null, children);
}, 'Group');
exports.Group = Group;
const Separator = (0, _menu.create)(_ref7 => {
  let {
    style
  } = _ref7;
  return /*#__PURE__*/_react.default.createElement(ContextMenu.Separator, null, /*#__PURE__*/_react.default.createElement(_reactNative.View, {
    style: style
  }));
}, 'Separator');
exports.Separator = Separator;
const CheckboxItem = (0, _menu.create)(_ref8 => {
  let {
    onValueChange,
    value,
    disabled,
    textValue,
    onBlur,
    onFocus,
    style,
    children
  } = _ref8;
  return /*#__PURE__*/_react.default.createElement(ContextMenu.CheckboxItem, {
    onFocus: onFocus,
    textValue: textValue,
    onBlur: onBlur,
    disabled: disabled,
    checked: typeof value === 'boolean' ? value : value !== 'off',
    onCheckedChange: next => onValueChange === null || onValueChange === void 0 ? void 0 : onValueChange(next ? 'on' : 'off', value === true ? 'on' : value === false ? 'off' : value),
    style: itemStyleReset
  }, /*#__PURE__*/_react.default.createElement(_menu.ItemPrimitive // @ts-expect-error we require a key in the types
  // this is for consumers
  // however, it isn't relevant locally here, since the key will be passed to the parent component
  // so that is sufficient
  , {
    key: undefined,
    style: style
  }, children));
}, 'CheckboxItem');
exports.CheckboxItem = CheckboxItem;
const ItemIndicator = (0, _menu.create)(_ref9 => {
  let {
    style,
    children
  } = _ref9;
  return /*#__PURE__*/_react.default.createElement(ContextMenu.ItemIndicator, null, /*#__PURE__*/_react.default.createElement(_reactNative.View, {
    style: style
  }, children));
}, 'ItemIndicator');
exports.ItemIndicator = ItemIndicator;
const ItemIcon = (0, _menu.create)(_ref10 => {
  let {
    children,
    style
  } = _ref10;
  return /*#__PURE__*/_react.default.createElement(_reactNative.View, {
    style: style
  }, children);
}, 'ItemIcon');
exports.ItemIcon = ItemIcon;
const Preview = (0, _menu.create)(() => /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null), 'Preview');
exports.Preview = Preview;
const Arrow = (0, _menu.create)(_ref11 => {
  let {
    children,
    ...restProps
  } = _ref11;
  return /*#__PURE__*/_react.default.createElement(ContextMenu.Arrow, restProps, children);
}, 'Arrow');
exports.Arrow = Arrow;
const Sub = (0, _menu.create)(_ref12 => {
  let {
    children
  } = _ref12;
  return /*#__PURE__*/_react.default.createElement(ContextMenu.Sub, null, children);
}, 'Sub');
exports.Sub = Sub;
const SubContent = (0, _menu.create)(_ref13 => {
  let {
    children,
    alignOffset,
    avoidCollisions,
    collisionPadding,
    loop,
    style,
    sideOffset
  } = _ref13;
  return /*#__PURE__*/_react.default.createElement(ContextMenu.Portal, null, /*#__PURE__*/_react.default.createElement(ContextMenu.SubContent, {
    loop: loop,
    alignOffset: alignOffset,
    avoidCollisions: avoidCollisions,
    collisionPadding: collisionPadding,
    sideOffset: sideOffset
  }, /*#__PURE__*/_react.default.createElement(ContentView, {
    style: style
  }, children)));
}, 'SubContent');
exports.SubContent = SubContent;
const Auxiliary = (0, _menu.create)(_ => /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null), 'Auxiliary');
exports.Auxiliary = Auxiliary;
//# sourceMappingURL=context-menu.web.js.map