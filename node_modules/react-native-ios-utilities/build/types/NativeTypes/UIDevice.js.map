{"version":3,"file":"UIDevice.js","sourceRoot":"","sources":["../../../src/types/NativeTypes/UIDevice.ts"],"names":[],"mappings":"AAAA,mBAAmB","sourcesContent":["// UIKit - UIDevice\n\nimport { UIDeviceOrientation } from \"./UIOrientation\";\n\nexport type UIUserInterfaceIdiom =\n  | 'unspecified'\n\n  /** Min: iOS 3.2 - iPhone and iPod touch style UI */\n  | 'phone'\n\n  /** Min: iOS 3.2 - iPad style UI */\n  | 'pad'\n\n  /** Min: iOS 9.0 - Apple TV style UI */\n  | 'tv'\n\n  /** Min: iOS 9.0 - CarPlay style UI */\n  | 'carPlay'\n\n  /** Min: iOS 14.0 - Optimized for Mac UI */\n  | 'mac'\n\n  /** Min: iOS 17.0 - Vision UI */\n  | 'vision';\n\nexport type UIDeviceBatteryState =\n  | 'unknown'\n  | 'unplugged'\n  | 'charging'\n  | 'full';\n\nexport type UIDevice = {\n\n  /**\n   * Synonym for model. \n   * Prior to iOS 16, user-assigned device name (e.g. \"My iPhone\").\n   */\n  name: string;\n\n  /** e.g. @\"iPhone\", @\"iPod touch\" */\n  model: string;\n\n  /** localized version of model */\n  localizedModel: string;\n\n  /** e.g. @\"iOS\" */\n  systemName: string;\n\n  /** e.g. @\"4.0\" */\n  systemVersion: string;\n\n  /** \n   * Return current device orientation.  \n   * this will return UIDeviceOrientationUnknown unless device orientation \n   * notifications are being generated. \n   */\n  orientation: UIDeviceOrientation;\n\n  /** \n   * Available: iOS 6.0\n   * UUID that may be used to uniquely identify the device, \n   * same across apps from a single vendor.\n   */\n  identifierForVendor: string;\n\n  isGeneratingDeviceOrientationNotifications: boolean;\n\n  /** \n   * Available: iOS 3.0\n   * Default is: `false`\n   */\n  isBatteryMonitoringEnabled: boolean;\n\n  /** \n   * Available: iOS 3.0\n   * // UIDeviceBatteryStateUnknown if monitoring disabled\n   */\n  batteryState: UIDeviceBatteryState;\n\n  /** \n   * Available: iOS 3.0\n   * // 0 .. 1.0. -1.0 if UIDeviceBatteryStateUnknown\n   */\n  batteryLevel: number;\n\n  /** \n   * Available: iOS 3.0\n   * Default is: `false`\n  */\n  isProximityMonitoringEnabled: boolean \n\n  /** \n   * Available: iOS 3.0\n   * // always returns NO if no proximity detector\n   */\n  proximityState: boolean;\n\n  /** \n   * Available: iOS 4.0\n   */\n  isMultitaskingSupported: boolean;\n\n  /** \n   * Available: iOS 3.2\n   */\n  userInterfaceIdiom: UIUserInterfaceIdiom;\n};"]}