{"version":3,"file":"UtilityTypes.js","sourceRoot":"","sources":["../../src/types/UtilityTypes.ts"],"names":[],"mappings":"","sourcesContent":["\nexport type KeyMapType\n  <T extends string, K extends { [k in `${T}`]: any }> = K;\n\nexport type FunctionVoid = () => void;\n\nexport type KeysWithType<T, U> = \n  { [K in keyof T]: T[K] extends U ? K : never }[keyof T];"]}