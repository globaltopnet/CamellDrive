{"version":3,"file":"EvaluableCondition.js","sourceRoot":"","sources":["../../../src/types/ComputableLayout/EvaluableCondition.ts"],"names":[],"mappings":"","sourcesContent":["import { CGRect, CGSize, UIEdgeInsets, UIDevice, UIUserInterfaceIdiom, UIDeviceOrientation, UIInterfaceOrientation, UITraitEnvironmentLayoutDirection, UIUserInterfaceActiveAppearance, UIUserInterfaceLevel, UIUserInterfaceSizeClass, UIUserInterfaceStyle, CGRectBase } from \"../NativeTypes\";\nimport { NumericLogicalExpression } from \"./NumericLogicalExpression\";\nimport { EvaluableConditionContext } from \"./EvaluableConditionContext\";\nimport { StringComparisonMode } from \"./StringComparisonMode\";\nimport { KeysWithType } from \"../UtilityTypes\";\n\nexport type EvaluableConditionFrameRectValue = {\n mode: 'window'; \n} | {\n mode: 'targetView';\n} | {\n mode: 'statusBar';\n} | {\n mode: 'custom';\n value: CGRectBase;\n};\n\nexport type EvaluableConditionSizeValue =  { \n  mode: 'window';\n} | { \n  mode: 'screen';\n} | { \n  mode: 'statusBar';\n} | { \n  mode: 'targetView';\n} | {\n  mode: 'custom';\n  value: number;\n};\n    \nexport type EvaluableCondition = {\n  mode: 'frameRect';\n  of: EvaluableConditionFrameRectValue;\n  valueForKey: keyof CGRect;\n  condition: NumericLogicalExpression;\n} | {\n  mode: 'size';\n  of: EvaluableConditionSizeValue;\n  valueForKey: keyof CGSize;\n  condition: NumericLogicalExpression;\n} | {\n  mode: 'safeAreaInsets';\n  valueForKey: keyof UIEdgeInsets;\n  condition: NumericLogicalExpression;\n} | {\n  mode: 'deviceIdiom';\n  isEqualTo: UIUserInterfaceIdiom;\n} | {\n  mode: 'deviceOrientation';\n  isEqualTo: UIDeviceOrientation;\n} | {\n  mode: 'horizontalSizeClass';\n  isEqualTo: UIUserInterfaceSizeClass;\n} | {\n  mode: 'verticalSizeClass';\n  isEqualTo: UIUserInterfaceSizeClass;\n} | {\n  mode: 'interfaceStyle';\n  isEqualTo: UIUserInterfaceStyle;\n} | {\n  mode: 'interfaceLevel';\n  isEqualTo: UIUserInterfaceLevel;\n} | {\n  mode: 'interfaceOrientation';\n  isEqualTo: UIInterfaceOrientation;\n} | {\n  mode: 'activeAppearance';\n  isEqualTo: UIUserInterfaceActiveAppearance;\n} | {\n  mode: 'layoutDirection';\n  isEqualTo: UITraitEnvironmentLayoutDirection;\n} | {\n  mode: 'isFlagTrue';\n  isEqualToKey: KeysWithType<EvaluableConditionContext, boolean>;\n} | {\n  mode: 'deviceFlags';\n  isEqualToKey: KeysWithType<UIDevice, boolean>;\n} | {\n  mode: 'deviceString';\n  forKey: KeysWithType<UIDevice, string>;\n  stringComparisonMode: StringComparisonMode;\n  isCaseSensitive: boolean;\n  stringValue: string;\n} | {\n  mode: 'customFlag';\n  value: boolean;\n} | {\n  mode: 'negate'\n  value: EvaluableCondition;\n} | {\n  mode: 'ifAnyAreTrue'\n  values: EvaluableCondition[];\n} | {\n  mode: 'ifAllAreTrue'\n  values: EvaluableCondition[];\n};"]}