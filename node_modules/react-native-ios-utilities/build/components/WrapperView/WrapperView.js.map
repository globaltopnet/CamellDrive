{"version":3,"file":"WrapperView.js","sourceRoot":"","sources":["../../../src/components/WrapperView/WrapperView.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAqB,IAAI,EAAE,MAAM,cAAc,CAAC;AAIvD,MAAM,OAAO,WAAY,SAAQ,KAAK,CAAC,aAA+B;IAEpE,SAAS,CAAQ;IACjB,QAAQ,CAAU;IAElB,oBAAoB;QAClB,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;IAC5B,CAAC;IAAA,CAAC;IAEF,UAAU,GAAG,GAAG,EAAE;QAChB,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC,CAAC;IAEF,iBAAiB,GAA6B,GAAG,EAAE;QACjD,aAAa;QACb,OAAO,IAAI,CAAC,SAAS,EAAE,SAAS,IAAI,IAAI,CAAC,QAAQ,CAAC;IACpD,CAAC,CAAC;IAEM,cAAc,GAAG,CAAC,GAAS,EAAE,EAAE;QACrC,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;IACvB,CAAC,CAAC;IAEM,eAAe,GAAG,CAAC,KAAwB,EAAE,EAAE;QACrD,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,CAAC;QAE7B,aAAa;QACb,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC;IAC3C,CAAC,CAAC;IAEF,MAAM;QACJ,MAAM,EAAE,QAAQ,EAAE,GAAG,UAAU,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAC/C,MAAM,cAAc,GAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC;QAE7C,OAAM,CACJ,oBAAC,IAAI,OACC,UAAU,EACd,GAAG,EAAE,IAAI,CAAC,cAAc,EACxB,QAAQ,EAAE,cAAc;gBACtB,CAAC,CAAC,SAAS;gBACX,CAAC,CAAC,IAAI,CAAC,eAAe,IAGvB,QAAQ,CACJ,CACR,CAAC;IACJ,CAAC;IAAA,CAAC;CACH;AAAA,CAAC","sourcesContent":["import * as React from 'react';\nimport { LayoutChangeEvent, View } from 'react-native';\n\nimport type { WrapperViewProps } from './WrapperViewTypes';\n\nexport class WrapperView extends React.PureComponent<WrapperViewProps> {\n  \n  nativeRef?: View;\n  reactTag?: number;\n\n  componentWillUnmount() {\n    this.reactTag = undefined;\n  };\n\n  getViewRef = () => {\n    return this.nativeRef;\n  };\n\n  getNativeReactTag: () => number | undefined = () => {\n    // @ts-ignore\n    return this.nativeRef?.nativeTag ?? this.reactTag;\n  };\n\n  private _handleViewRef = (ref: View) => {\n    this.nativeRef = ref;\n  };\n\n  private _handleOnLayout = (event: LayoutChangeEvent) => {\n    this.props.onLayout?.(event);\n\n    // @ts-ignore\n    this.reactTag = event.nativeEvent.target;\n  };\n\n  render() {\n    const { children, ...otherProps } = this.props;\n    const didSetReactTag = this.reactTag != null;\n\n    return(\n      <View \n        {...otherProps}\n        ref={this._handleViewRef}\n        onLayout={didSetReactTag \n          ? undefined\n          : this._handleOnLayout\n        }\n      >\n        {children}\n      </View>\n    );  \n  };\n};"]}