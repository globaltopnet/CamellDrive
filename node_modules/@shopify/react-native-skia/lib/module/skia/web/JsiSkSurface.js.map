{"version":3,"names":["HostObject","JsiSkCanvas","JsiSkImage","JsiSkRect","JsiSkSurface","constructor","CanvasKit","ref","_defineProperty","delete","flush","getCanvas","makeImageSnapshot","bounds","image","Array","from","fromValue","undefined"],"sources":["JsiSkSurface.ts"],"sourcesContent":["import type { CanvasKit, Surface } from \"canvaskit-wasm\";\n\nimport type { SkCanvas, SkImage, SkRect, SkSurface } from \"../types\";\n\nimport { HostObject } from \"./Host\";\nimport { JsiSkCanvas } from \"./JsiSkCanvas\";\nimport { JsiSkImage } from \"./JsiSkImage\";\nimport { JsiSkRect } from \"./JsiSkRect\";\n\nexport class JsiSkSurface\n  extends HostObject<Surface, \"Surface\">\n  implements SkSurface\n{\n  constructor(CanvasKit: CanvasKit, ref: Surface) {\n    super(CanvasKit, ref, \"Surface\");\n  }\n\n  dispose = () => {\n    this.ref.delete();\n  };\n\n  flush() {\n    this.ref.flush();\n  }\n\n  getCanvas(): SkCanvas {\n    return new JsiSkCanvas(this.CanvasKit, this.ref.getCanvas());\n  }\n\n  makeImageSnapshot(bounds?: SkRect): SkImage {\n    const image = this.ref.makeImageSnapshot(\n      bounds\n        ? Array.from(JsiSkRect.fromValue(this.CanvasKit, bounds))\n        : undefined\n    );\n    return new JsiSkImage(this.CanvasKit, image);\n  }\n}\n"],"mappings":";;;AAIA,SAASA,UAAU,QAAQ,QAAQ;AACnC,SAASC,WAAW,QAAQ,eAAe;AAC3C,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,SAAS,QAAQ,aAAa;AAEvC,OAAO,MAAMC,YAAY,SACfJ,UAAU,CAEpB;EACEK,WAAWA,CAACC,SAAoB,EAAEC,GAAY,EAAE;IAC9C,KAAK,CAACD,SAAS,EAAEC,GAAG,EAAE,SAAS,CAAC;IAACC,eAAA,kBAGzB,MAAM;MACd,IAAI,CAACD,GAAG,CAACE,MAAM,CAAC,CAAC;IACnB,CAAC;EAJD;EAMAC,KAAKA,CAAA,EAAG;IACN,IAAI,CAACH,GAAG,CAACG,KAAK,CAAC,CAAC;EAClB;EAEAC,SAASA,CAAA,EAAa;IACpB,OAAO,IAAIV,WAAW,CAAC,IAAI,CAACK,SAAS,EAAE,IAAI,CAACC,GAAG,CAACI,SAAS,CAAC,CAAC,CAAC;EAC9D;EAEAC,iBAAiBA,CAACC,MAAe,EAAW;IAC1C,MAAMC,KAAK,GAAG,IAAI,CAACP,GAAG,CAACK,iBAAiB,CACtCC,MAAM,GACFE,KAAK,CAACC,IAAI,CAACb,SAAS,CAACc,SAAS,CAAC,IAAI,CAACX,SAAS,EAAEO,MAAM,CAAC,CAAC,GACvDK,SACN,CAAC;IACD,OAAO,IAAIhB,UAAU,CAAC,IAAI,CAACI,SAAS,EAAEQ,KAAK,CAAC;EAC9C;AACF"}