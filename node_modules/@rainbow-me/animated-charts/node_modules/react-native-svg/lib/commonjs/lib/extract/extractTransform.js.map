{"version":3,"names":["appendTransformProps","props","x","y","originX","originY","scaleX","scaleY","rotation","skewX","skewY","appendTransform","universal2axis","universal","axisX","axisY","defaultValue","coords","split","length","Array","isArray","isNaN","props2transform","translate","translateX","translateY","origin","scale","skew","console","warn","tr","or","sc","sk","transformToMatrix","transform","reset","append","t","parse","e","error","transformProps","toArray","extractTransform","identity"],"sources":["extractTransform.ts"],"sourcesContent":["import { append, appendTransform, identity, reset, toArray } from '../Matrix2D';\nimport { parse } from './transform';\nimport { NumberProp, TransformedProps, TransformProps } from './types';\n\nfunction appendTransformProps(props: TransformedProps) {\n  const { x, y, originX, originY, scaleX, scaleY, rotation, skewX, skewY } =\n    props;\n  appendTransform(\n    x + originX,\n    y + originY,\n    scaleX,\n    scaleY,\n    rotation,\n    skewX,\n    skewY,\n    originX,\n    originY,\n  );\n}\n\nfunction universal2axis(\n  universal: NumberProp | NumberProp[] | undefined,\n  axisX: NumberProp | void,\n  axisY: NumberProp | void,\n  defaultValue?: number,\n): [number, number] {\n  let x;\n  let y;\n  if (typeof universal === 'number') {\n    x = y = universal;\n  } else if (typeof universal === 'string') {\n    const coords = universal.split(/\\s*,\\s*/);\n    if (coords.length === 2) {\n      x = +coords[0];\n      y = +coords[1];\n    } else if (coords.length === 1) {\n      x = y = +coords[0];\n    }\n  } else if (Array.isArray(universal)) {\n    if (universal.length === 2) {\n      x = +universal[0];\n      y = +universal[1];\n    } else if (universal.length === 1) {\n      x = y = +universal[0];\n    }\n  }\n\n  axisX = +axisX;\n  if (!isNaN(axisX)) {\n    x = axisX;\n  }\n\n  axisY = +axisY;\n  if (!isNaN(axisY)) {\n    y = axisY;\n  }\n\n  return [x || defaultValue || 0, y || defaultValue || 0];\n}\n\nexport function props2transform(\n  props: TransformProps,\n): TransformedProps | null {\n  const {\n    rotation,\n    translate,\n    translateX,\n    translateY,\n    origin,\n    originX,\n    originY,\n    scale,\n    scaleX,\n    scaleY,\n    skew,\n    skewX,\n    skewY,\n    x,\n    y,\n  } = props;\n  if (\n    rotation == null &&\n    translate == null &&\n    translateX == null &&\n    translateY == null &&\n    origin == null &&\n    originX == null &&\n    originY == null &&\n    scale == null &&\n    scaleX == null &&\n    scaleY == null &&\n    skew == null &&\n    skewX == null &&\n    skewY == null &&\n    x == null &&\n    y == null\n  ) {\n    return null;\n  }\n\n  if (Array.isArray(x) || Array.isArray(y)) {\n    console.warn(\n      'Passing SvgLengthList to x or y attribute where SvgLength expected',\n    );\n  }\n  const tr = universal2axis(\n    translate,\n    translateX || (Array.isArray(x) ? x[0] : x),\n    translateY || (Array.isArray(y) ? y[0] : y),\n  );\n  const or = universal2axis(origin, originX, originY);\n  const sc = universal2axis(scale, scaleX, scaleY, 1);\n  const sk = universal2axis(skew, skewX, skewY);\n\n  return {\n    rotation: rotation == null ? 0 : +rotation || 0,\n    originX: or[0],\n    originY: or[1],\n    scaleX: sc[0],\n    scaleY: sc[1],\n    skewX: sk[0],\n    skewY: sk[1],\n    x: tr[0],\n    y: tr[1],\n  };\n}\n\nexport function transformToMatrix(\n  props: TransformedProps | null,\n  transform: number[] | string | TransformProps | void | null | undefined,\n): [number, number, number, number, number, number] | null {\n  if (!props && !transform) {\n    return null;\n  }\n  reset();\n  props && appendTransformProps(props);\n\n  if (transform) {\n    if (Array.isArray(transform)) {\n      if (typeof transform[0] === 'number') {\n        append(\n          transform[0],\n          transform[1],\n          transform[2],\n          transform[3],\n          transform[4],\n          transform[5],\n        );\n      }\n      // noop for react-native transform arrays, let animated handle them\n    } else if (typeof transform === 'string') {\n      try {\n        const t = parse(transform);\n        append(t[0], t[3], t[1], t[4], t[2], t[5]);\n      } catch (e) {\n        console.error(e);\n      }\n    } else {\n      const transformProps = props2transform(transform);\n      transformProps && appendTransformProps(transformProps);\n    }\n  }\n\n  return toArray();\n}\n\nexport default function extractTransform(\n  props: number[] | string | TransformProps,\n) {\n  if (Array.isArray(props)) {\n    return props;\n  }\n  if (typeof props === 'string') {\n    try {\n      const t = parse(props);\n      return [t[0], t[3], t[1], t[4], t[2], t[5]];\n    } catch (e) {\n      console.error(e);\n      return identity;\n    }\n  }\n  return transformToMatrix(props2transform(props), props.transform);\n}\n"],"mappings":"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"}