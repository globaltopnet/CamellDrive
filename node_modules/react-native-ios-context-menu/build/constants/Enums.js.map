{"version":3,"file":"Enums.js","sourceRoot":"","sources":["../../src/constants/Enums.ts"],"names":[],"mappings":"AAAA,sEAAsE;AACtE,MAAM,CAAC,MAAM,SAAS,GAAG;IACvB,MAAM,EAAK,MAAM;IACjB,QAAQ,EAAG,QAAQ;IACnB,OAAO,EAAI,OAAO;IAClB,SAAS,EAAE,SAAS;CACrB,CAAC;AAEF,4CAA4C;AAC5C,MAAM,CAAC,MAAM,WAAW,GAAG;IACzB,WAAW,EAAI,aAAa;IAC5B,aAAa,EAAE,eAAe;CAC/B,CAAC;AAEF,+CAA+C;AAC/C,MAAM,CAAC,MAAM,qBAAqB,GAAG;IACnC,MAAM,EAAO,QAAQ;IACrB,QAAQ,EAAK,UAAU;IACvB,WAAW,EAAE,aAAa;CAC3B,CAAC;AAEF,0CAA0C;AAC1C,MAAM,CAAC,MAAM,gBAAgB,GAAG;IAC9B,EAAE,EAAK,IAAI;IACX,GAAG,EAAI,KAAK;IACZ,KAAK,EAAE,OAAO;CACf,CAAC;AAEF,+CAA+C;AAC/C,MAAM,CAAC,MAAM,WAAW,GAAG;IACzB,SAAS,EAAE,SAAS;IACpB,QAAQ,EAAG,QAAQ;CACpB,CAAC;AAEF,+CAA+C;AAC/C,MAAM,CAAC,MAAM,WAAW,GAAG;IACzB,SAAS,EAAE,SAAS;IACpB,SAAS,EAAE,SAAS;CACrB,CAAC;AAEF,wDAAwD;AACxD,MAAM,CAAC,MAAM,WAAW,GAAG;IACzB,KAAK,EAAM,KAAK;IAChB,SAAS,EAAE,SAAS;CACrB,CAAC;AAEF,MAAM,CAAC,MAAM,cAAc,GAAG;IAC5B,QAAQ,EAAG,UAAU;IACrB,SAAS,EAAE,WAAW;IACtB,QAAQ,EAAG,UAAU;CACtB,CAAC;AAEF,MAAM,CAAC,MAAM,iBAAiB,GAAG;IAC/B,WAAW,EAAW,aAAa;IACnC,WAAW,EAAW,aAAa;IACnC,gBAAgB,EAAM,kBAAkB;IACxC,YAAY,EAAU,cAAc;IACpC,eAAe,EAAO,iBAAiB;IACvC,oBAAoB,EAAE,sBAAsB,EAAE,+BAA+B;CAC9E,CAAC;AAEF,MAAM,CAAC,MAAM,cAAc,GAAG;IAC5B,SAAS,EAAa,WAAW;IACjC,WAAW,EAAW,aAAa;IACnC,IAAI,EAAkB,MAAM;IAC5B,SAAS,EAAa,WAAW;IACjC,cAAc,EAAQ,gBAAgB;IACtC,oBAAoB,EAAE,sBAAsB,EAAE,0BAA0B;CACzE,CAAC;AAEF,MAAM,CAAC,MAAM,cAAc,GAAG;IAC5B,SAAS,EAAI,WAAW;IACxB,WAAW,EAAE,aAAa;IAC1B,IAAI,EAAS,MAAM;IACnB,SAAS,EAAI,WAAW,EAAI,oDAAoD;CACjF,CAAC","sourcesContent":["/** Used for `IconConfigKeys.iconType` or `IconConfigKeys.iconType` */\nexport const IconTypes = {\n  'NONE'   : 'NONE'   ,\n  'SYSTEM' : 'SYSTEM' ,\n  'ASSET'  : 'ASSET'  ,\n  'REQUIRE': 'REQUIRE',\n};\n\n/** Used for `MenuConfigKeys.menuOptions` */\nexport const MenuOptions = {\n  destructive  : 'destructive'  ,\n  displayInline: 'displayInline',\n};\n\n/** Used for `MenuActionKeys.menuAttributes` */\nexport const MenuElementAtrributes = {\n  hidden     : 'hidden'     ,\n  disabled   : 'disabled'   ,\n  destructive: 'destructive',\n};\n\n/** Used for `MenuActionKeys.menuState` */\nexport const MenuElementState = {\n  on   : 'on'   ,\n  off  : 'off'  ,\n  mixed: 'mixed',\n};\n\n/** Used for `PreviewConfigKeys.previewType` */\nexport const PreviewType = {\n  'DEFAULT': 'DEFAULT',\n  'CUSTOM' : 'CUSTOM' ,\n};\n\n/** Used for `PreviewConfigKeys.previewSize` */\nexport const PreviewSize = {\n  'INHERIT': 'INHERIT' ,\n  'STRETCH': 'STRETCH' ,\n};\n\n/** Used for `PreviewConfigKeys.preferredCommitStyle` */\nexport const CommitStyle = {\n  'pop'    : 'pop'     ,\n  'dismiss': 'dismiss' ,\n};\n\nexport const IconConfigKeys = {\n  iconType : 'iconType',\n  iconValue: 'iconValue',\n  iconTint : 'iconTint',\n};\n\nexport const PreviewConfigKeys = {\n  previewType         : 'previewType'         , // optional - PreviewType value\n  previewSize         : 'previewSize'         , // optional - PreviewSize value\n  isResizeAnimated    : 'isResizeAnimated'    , // optional - bool\n  borderRadius        : 'borderRadius'        , // optional - number\n  backgroundColor     : 'backgroundColor'     , // optional - string\n  preferredCommitStyle: 'preferredCommitStyle', // optional - CommitStyle value\n};\n\nexport const MenuActionKeys = {\n  actionKey           : 'actionKey'           , // required - string: unique identifier\n  actionTitle         : 'actionTitle'         , // required - string value\n  icon                : 'icon'                , // optional - IconKeys object\n  menuState           : 'menuState'           , // optional - MenuElementState item\n  menuAttributes      : 'menuAttributes'      , // optional - MenuElementAtrributes item\n  discoverabilityTitle: 'discoverabilityTitle', // optional - string value\n};\n\nexport const MenuConfigKeys = {\n  menuTitle  : 'menuTitle'  , // required - string\n  menuOptions: 'menuOptions', // optional - array of MenuOptions\n  icon       : 'icon'       , // optional - IconKeys object\n  menuItems  : 'menuItems'  , // optional - array of MenuConfigKeys/MenuActionKeys\n};"]}