{"version":3,"file":"MenuEvents.js","sourceRoot":"","sources":["../../src/types/MenuEvents.ts"],"names":[],"mappings":"","sourcesContent":["import type { NativeSyntheticEvent } from 'react-native';\nimport type { MenuActionConfig } from '../types/MenuConfig';\n\n// Event Object Types\n// ------------------\n\nexport type OnMenuWillShowEventObject = NativeSyntheticEvent<{\n}>;\n\nexport type OnMenuWillHideEventObject = NativeSyntheticEvent<{\n}>;\n\nexport type OnMenuDidShowEventObject = NativeSyntheticEvent<{\n}>;\n\nexport type OnMenuDidHideEventObject = NativeSyntheticEvent<{\n}>;\n\nexport type OnMenuWillCancelEventObject = NativeSyntheticEvent<{\n}>;\n\nexport type OnMenuDidCancelEventObject = NativeSyntheticEvent<{}> & {\n  isUsingActionSheetFallback?: false;\n} | { \n  isUsingActionSheetFallback: true;\n};\n\nexport type OnMenuWillCreateEventObject = NativeSyntheticEvent<{\n}>;\n\nexport type OnRequestDeferredElementObject = NativeSyntheticEvent<{\n  deferredID: string;\n}>;\n\nexport type OnPressMenuItemEventObject = NativeSyntheticEvent<MenuActionConfig> & {\n  isUsingActionSheetFallback?: false;\n  \n} | {\n  isUsingActionSheetFallback: true;\n  nativeEvent: MenuActionConfig;\n};\n\nexport type OnPressMenuPreviewEventObject = NativeSyntheticEvent<{\n}>;\n\nexport type MenuAuxiliaryPreviewDetailsEventObject = {\n  size: {\n    width: number;\n    height: number;\n  };\n  menuHasItems: boolean;\n  menuItemsPlacement: 'top' | 'bottom' | 'unknown';\n  previewPosition: 'top' | 'bottom';\n  isAuxiliaryPreviewAttachedToTop: boolean;\n}; \n      \nexport type OnMenuAuxiliaryPreviewWillShowEventObject =\n  NativeSyntheticEvent<MenuAuxiliaryPreviewDetailsEventObject>;\n\nexport type OnMenuAuxiliaryPreviewDidShowEventObject = \n  NativeSyntheticEvent<MenuAuxiliaryPreviewDetailsEventObject>;\n\n// Event Handler Types\n// -------------------\n\nexport type OnMenuWillShowEvent = (\n  event: OnMenuWillShowEventObject\n) => void;\n\nexport type OnMenuWillHideEvent = (\n  event: OnMenuWillHideEventObject\n) => void;\n\nexport type OnMenuDidShowEvent = (\n  event: OnMenuDidShowEventObject\n) => void;\n\nexport type OnMenuDidHideEvent = (\n  event: OnMenuDidHideEventObject\n) => void;\n\nexport type OnMenuWillCancelEvent = (\n  event: OnMenuWillCancelEventObject\n) => void;\n\nexport type OnMenuDidCancelEvent = (\n  event: OnMenuDidCancelEventObject\n) => void;\n\nexport type OnMenuWillCreateEvent = (\n  event: OnMenuWillCreateEventObject\n) => void;\n\nexport type OnRequestDeferredElementEvent = (\n  event: OnRequestDeferredElementObject\n) => void;\n\nexport type OnPressMenuItemEvent = (\n  event: OnPressMenuItemEventObject\n) => void;\n\nexport type OnPressMenuPreviewEvent = (\n  event: OnPressMenuPreviewEventObject\n) => void;\n\nexport type OnMenuAuxiliaryPreviewWillShowEvent = (\n  event: OnMenuAuxiliaryPreviewWillShowEventObject\n) => void;\n\nexport type OnMenuAuxiliaryPreviewDidShowEvent = (\n  event: OnMenuAuxiliaryPreviewDidShowEventObject\n) => void;"]}