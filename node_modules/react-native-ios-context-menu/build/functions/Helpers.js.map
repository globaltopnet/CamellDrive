{"version":3,"file":"Helpers.js","sourceRoot":"","sources":["../../src/functions/Helpers.ts"],"names":[],"mappings":"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","sourcesContent":["import { ActionSheetIOS, ActionSheetIOSOptions, findNodeHandle } from 'react-native';\n\n\n/** wrapper func for setState that returns a promise */\n// eslint-disable-next-line consistent-this\nexport function setStateAsync<T extends {} >(\n  that: React.Component,\n  newState: T | ((prevState: T) => T)\n) {\n  return new Promise<void>((resolve) => {\n    that.setState(newState, () => {\n      resolve();\n    });\n  });\n};\n\n/** wrapper for timeout that returns a promise */\nexport function timeout(ms: number) {\n  return new Promise<void>(resolve => {\n    const timeoutID = setTimeout(() => {\n      clearTimeout(timeoutID);\n      resolve();\n    }, ms)\n  });\n};\n\n/** Wraps a promise that will reject if not not resolved in <ms> milliseconds */\nexport function promiseWithTimeout<T>(ms: number, promise: Promise<T>){\n  // Create a promise that rejects in <ms> milliseconds\n  const timeoutPromise = new Promise<T>((_, reject) => {\n    const timeoutID = setTimeout(() => {\n      clearTimeout(timeoutID);\n      reject(`Promise timed out in ${ms} ms.`)\n    }, ms);\n  });\n\n  // Returns a race between our timeout and the passed in promise\n  return Promise.race([promise, timeoutPromise]);\n};\n\nexport function pad(num: number | string, places = 2){\n  return String(num).padStart(places, '0');\n};\n\nexport function asyncActionSheet(config: ActionSheetIOSOptions){\n  return new Promise(resolve => {\n    ActionSheetIOS.showActionSheetWithOptions(config, (buttonIndex) => {\n      resolve(buttonIndex);\n    });\n  });\n};\n\nexport function asyncActionSheetConfirm(config: {\n  title        : string; \n  message      : string; \n  confirmText  : string; \n  isDestructive?: boolean;\n}){\n  const isDestructive = config.isDestructive ?? false;\n\n  return new Promise(resolve => {\n    ActionSheetIOS.showActionSheetWithOptions({\n      title  : config.title,\n      message: config.message,\n\n      options: ['Cancel', config.confirmText],\n      cancelButtonIndex: 0,\n      ...(isDestructive && {\n        destructiveButtonIndex: 1,\n      }),\n    }, (buttonIndex) => {\n      resolve((buttonIndex === 1));\n    });\n  });\n};\nexport function getNativeNodeHandle(nativeRef: React.Component){\n  const nodeHandle = findNodeHandle(nativeRef);\n\n  if(nodeHandle == null){\n    throw new Error('Unable to get the node handle for the native ref.');\n  };\n\n  return nodeHandle;\n};"]}